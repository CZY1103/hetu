import java.util.Arrays;

public class NiuCount {
    public static double arvage(int[] arr){
        long sum = 0;
        for(int i = 0;i < arr.length;i++){
            sum = sum + arr[i];
        }
        double s = ((double)sum)/arr.length;
        return s;
    }
    public static double zhongwei(int[] arr){
        Arrays.sort(arr);
        if(arr.length%2==1){
            return (double)arr[arr.length/2];
        }else{
            double s = (double)(arr[arr.length/2]+arr[arr.length/2-1])/2;
            return s;
        }
    }
    public static int Answerofjudge (int[] arr) {
        if(zhongwei(arr)>arvage(arr)){
            return 1;
        }else if(zhongwei(arr)<arvage(arr)){
            return -1;
        }else{
            return 0;
        }
    }

    public static void main(String[] args) {
        int[] arr = {900000300,900000301,900000302,900000303,900000304,900000305,
                900000307,900000308,900000309,900000310,900000311,900000312,
                900000313,900000314,900000315,900000316,900000317,900000318,900000319,
                900000320,900000321,900000322,900000323,900000324,900000325,900000326,
                900000327,900000328,900000329,900000330,900000331,900000332,900000333,
                900000334,900000335,900000336,900000337,900000338,900000339,900000340,
                900000341,900000342,900000343,900000344,900000345,900000346,900000347,
                900000348,900000349,900000350,900000351,900000352,900000353,900000354,
                900000355,900000356,900000357,900000358,900000359,900000360,900000361,
                900000362,900000363,900000364,900000365,900000366,900000367,900000368,
                900000369,900000370,900000371,900000372,900000373,900000374,900000375,
                900000376,900000377,900000378,900000379,900000380,900000381,900000382,
                900000383,900000384,900000385,900000386,900000387,900000388,900000389,
                900000390,900000391,900000392,900000393,900000394,900000395,900000396,
                900000397,900000398,900000399,900000400,900000401,900000402,900000403,
                900000404,900000405,900000406,900000407,900000408,900000409,900000410,
                900000411,900000412,900000413,900000414,900000415,900000416,900000417,
                900000418,900000419,900000420,900000421,900000422,900000423,900000424,
                900000425,900000426,900000427,900000428,900000429,900000430,900000431,
                900000432,900000433,900000434,900000435,900000436,900000437,900000438,
                900000439,900000440,900000441,900000442,900000443,900000444,900000445,
                900000446,900000447,900000448,900000449,900000450,900000451,900000452,
                900000453,900000454,900000455,900000456,900000457,900000458,900000459,
                900000460,900000461,900000462,900000463,900000464,900000465,900000466,900000467,900000468,900000469,900000470,900000471,900000472,900000473,900000474,900000475,900000476,900000477,900000478,900000479,900000480,900000481,900000482,900000483,900000484,900000485,900000486,900000487,900000488,900000489,900000490,900000491,900000492,900000493,900000494,900000495,900000496,900000497,900000498,900000499};
        System.out.println(Answerofjudge(arr));
    }
}
